version: '3.7'

services:
  # Apache Kafka y Zookeeper (usando im√°genes de Bitnami)
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - so1-proyecto2

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - so1-proyecto2

  # Consumer app en Golang
  consumer:
    build: ./consumer
    depends_on:
      - kafka
      - redis
      - mongodb
    networks:
      - so1-proyecto2

  # Producer app en Golang
  golang-producer:
    build: ./golang-producer
    ports:
      - "3001:3001"
    depends_on:
      - kafka
    networks:
      - so1-proyecto2

 # Producer app en Rust (WebAssembly)
  # wasm-producer:
  #   build: ./wasm-producer
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - kafka

  # Client app en Golang
  golang-client:
    build: ./golang-client
    ports:
      - "8080:8080"
    depends_on:
      - golang-producer
    networks:
      - so1-proyecto2

  # Redis
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - so1-proyecto2

  # MongoDB
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - so1-proyecto2

  # Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - redis
    networks:
      - so1-proyecto2
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  mongodb_data:
  grafana_data:

networks:
  so1-proyecto2:
    external: true
